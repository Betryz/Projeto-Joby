// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int       @id @default(autoincrement())
  public_id String    @unique @default(uuid())
  name      String    @db.VarChar(100)
  email     String    @unique(map: "email") @db.VarChar(255)
  pass      String    @db.VarChar(255)
  avatar    String?   @db.VarChar(700)
  session   session[]
  reviews   reviews[]
}

model session {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.VarChar(700)
  update_at DateTime @updatedAt
  user_id   Int
  user      user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model reviews {
  id       Int    @id @default(autoincrement())
  comment  String @db.Text
  user  String
  filme_id String
  filme    filme  @relation(fields: [filme_id], references: [public_id], onDelete: Cascade, onUpdate: NoAction)
  user_id     user   @relation(fields: [user], references: [public_id], onDelete: Cascade)
}

model filme {
  id        Int    @id @default(autoincrement())
  public_id String @unique @default(uuid())
  name      String
  resumo    String @db.Text

  reviews reviews[]
}
